# # version: "3.9"

# services:
#   # # this is for build
#   # frontend:
#   #   build: ./frontend
#   #   container_name: vite_frontend
#   #   restart: always
#   #   ports:
#   #     - "3039:3039"
#   #   env_file:
#   #     - ./frontend/.env
#   #   depends_on:
#   #     - backend


#   # frontend:
#   #   # Docker will now use a pre-built image instead of building from a Dockerfile.
#   #   # Replace `node:22-alpine` with your actual frontend image name.
#   #   # image: node:22-alpine
#   #   container_name: vite_frontend
#   #   restart: always
#   #   ports:
#   #     - "3039:3039"
#   #   env_file:
#   #     - ./frontend/.env
#   #   depends_on:
#   #     - backend

#   # This is working withoud build
#   frontend:
#     build: ./frontend
#     container_name: vite_frontend
#     working_dir: /usr/src/app
#     restart: always
#     ports:
#       - "3039:3039"
#     volumes:
#       - ./frontend:/usr/src/app
#       - /usr/src/app/node_modules
#     env_file:
#         - ./frontend/.env
#     depends_on:
#         - backend


#   backend:
#     build: ./backend
#     container_name: node_backend
#     restart: always
#     ports:
#       - "8101:8101"
#     env_file:
#       - ./backend/.env
#     depends_on:
#       - postgres

#   postgres:
#     image: postgres:15-alpine
#     container_name: postgres_db
#     restart: always
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: mydb
#       POSTGRES_PORT: 5432
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   pgadmin:
#     image: dpage/pgadmin4
#     container_name: pgadmin
#     restart: always
#     ports:
#       - "8090:80"
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: admin
#       PGADMIN_CONFIG_SERVER_MODE: "False"
#     depends_on:
#       - postgres

# volumes:
#   postgres_data:


version: "3.9"

services:
  # frontend:
  #   build: ./frontend
  #   container_name: vite_frontend
  #   working_dir: /usr/src/app
  #   restart: always
  #   volumes:
  #     - ./frontend:/usr/src/app
  #     - /usr/src/app/node_modules
  #     - ./frontend/dist:/usr/share/nginx/html  # build output for nginx
  #   env_file:
  #     - ./frontend/.env
  #   depends_on:
  #     - backend
  #   expose:
  #     - "80"

  frontend:
    build: ./frontend
    container_name: vite_frontend
    restart: always
    ports:
      - "3039:80"

  backend:
    build: ./backend
    container_name: node_backend
    restart: always
    env_file:
      - ./backend/.env
    expose:
      - "8101"
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
      POSTGRES_PORT: 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8090:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
